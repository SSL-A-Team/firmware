name: A-Team Firmware Compile
on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '**'
jobs:
  test-firmware-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Fetch Submodules
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: |
            ${{ secrets.ROBOT_PRIVATE_DATA_PRIVATE_SSH_KEY }}
      - run: |
          git submodule update --init --recursive
          ./util/ateam-credentials-setup.bash
      - uses: cachix/install-nix-action@v31
        with:
          extra_nix_config:
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= mycache.example.org:somePublicKeyString=
            substituters = https://cache.nixos.org https://mycache.example.org
      - name: Validate Nix Environment
        shell: bash
        run: |
          nix flake check
          nix develop -c cargo --version
          nix develop -c arm-none-eabi-gcc --version
      - name: Build Common Libraries
        shell: bash
        run: |
          nix develop -c make common--clean
          nix develop -c make common--all
      - name: Test Common Libraries
        shell: bash
        run: |
          nix develop -c make common--test
      - name: Build Common Packets
        shell: bash
        run: |
          nix develop -c make software-communication--clean
          nix develop -c make software-communication--build
      - name: Test Common Packets
        shell: bash
        run: |
          nix develop -c make software-communication--test
      - name: Build Motor Controller Firmware
        shell: bash
        run: |
          nix develop -c make clean
          nix develop -c make motor-controller--all
      - name: Build Kicker Firmware
        shell: bash
        run: |
          nix develop -c make clean
          nix develop -c make motor-controller--all
          nix develop -c make kicker-board--all
      - name: Build Control Board Firmware
        shell: bash
        run: |
          nix develop -c make clean
          nix develop -c make motor-controller--all
          nix develop -c make control-board--all
      - name: Build Control Board Firmware - Public Wifi Credentials
        shell: bash
        run: |
          nix develop -c make clean
          nix develop -c make motor-controller--all
          nix develop -c make NO_ATEAM_WIFI_CREDENTIALS=true control-board--all
